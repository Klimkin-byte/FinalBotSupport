version: 2.1

executors:
  python-executor:
    docker:
      - image: cimg/python:3.12  # Используем образ с Python 3.12
    working_directory: /home/circleci/project  # Устанавливаем рабочую директорию

jobs:
  run_unit_tests:
    executor: python-executor
    steps:
      - checkout  # Проверяем код
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Проверка наличия requirements.txt
          command: |
            if [ ! -f requirements.txt ]; then
              echo "Ошибка: файл requirements.txt не найден!"
              exit 1
            fi
      - run:
          name: Установка PYTHONPATH
          command: echo 'export PYTHONPATH=$PYTHONPATH:/home/circleci/project' >> $BASH_ENV
      - run:
          name: Установка зависимостей и запуск юнит-тестов
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --no-cache-dir
            pytest --maxfail=5 --disable-warnings
      - save_cache:
          paths:
            - ~/.cache/pip
          key: v2-dependencies-{{ checksum "requirements.txt" }}

  create_env_and_run_bot:
    executor: python-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Проверка наличия requirements.txt
          command: |
            if [ ! -f requirements.txt ]; then
              echo "Ошибка: файл requirements.txt не найден!"
              exit 1
            fi
      - run:
          name: Установка PYTHONPATH
          command: echo 'export PYTHONPATH=$PYTHONPATH:/home/circleci/project' >> $BASH_ENV
      - run:
          name: Создание файла .env
          command: |
            echo "TOKEN=${TOKEN}" > .env
            echo "ADMIN_ID=${ADMIN_ID}" >> .env
            echo "DATABASE_URL=${DATABASE_URL}" >> .env
            echo "Содержимое файла .env:"
            cat .env
          when: always
      - run:
          name: Установка окружения и запуск бота
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --no-cache-dir
            python botsupport/new_support.py
          no_output_timeout: 15m
      - save_cache:
          paths:
            - ~/.cache/pip
          key: v2-dependencies-{{ checksum "requirements.txt" }}

workflows:
  version: 2
  build_and_test:
    jobs:
      - run_unit_tests
      - create_env_and_run_bot:
          requires:
            - run_unit_tests